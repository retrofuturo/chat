"use strict";function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,s){for(var n=0;n<s.length;n++){var t=s[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(s,n,t){return n&&e(s.prototype,n),t&&e(s,t),s}}(),socket=io("https://easycode-test-chat.herokuapp.com/"),Chat=function(){function e(s){_classCallCheck(this,e),this.chatRoomsList=document.querySelector(".chat-rooms-list"),this.messageContainer=document.querySelector(".message-container")}return _createClass(e,[{key:"verify",value:function(e){return new Promise(function(s,n){socket.emit("verify",e,function(e,t){e&&n(e),s(t)})})}},{key:"getUsers",value:function(){return new Promise(function(e,s){socket.emit("getUsers",function(n){n||s("Users not found"),e(n)})})}},{key:"sendMessage",value:function(e,s){socket.emit("chatMessage",e,s)}},{key:"writeMessage",value:function(e){socket.emit("writeMessage",e)}},{key:"renderUsers",value:function(e){var s=this;e.forEach(function(e){var n=s.userItemTemplate(e);s.chatRoomsList.insertAdjacentHTML("beforeend",n)})}},{key:"userItemTemplate",value:function(e){return'\n            <div class="chat-room-item d-flex align-items-center">\n                <div class="chat-room-user-ava">\n                    <img src="img/chat-room-ava.png" alt="">\n                    <span class="new-msg-count"></span>\n                </div>\n                \x3c!-- / chat-room-user-ava --\x3e\n                <div class="chat-room-user-info">\n                    <span class="chat-room-user-name">'+e.name+'</span>\n\n                    <div class="chat-room-last-msg d-flex justify-content-between">\n                        <span class="last-msg">'+e.lastMessage+'</span>\n                        <span class="last-msg-time">1 min</span>\n                    </div>\n                    \x3c!-- / chat-room-last-msg --\x3e\n                    <span class="chat-room-user-status online"></span>\n                </div>\n                \x3c!-- / chat-room-user-info --\x3e\n            </div>\n            '}},{key:"renderMessage",value:function(e,s,n){var t=document.createElement("div");t.innerHTML='\n            <img src="img/chat-room-ava.png" alt="">\n            <div class="message-text">\n                '+e+"\n            </div>\n            ",s.name===n.name?t.classList.add("message","from-you"):t.classList.add("message","to-you"),this.messageContainer.appendChild(t)}}]),e}(),_createClass=function(){function e(e,s){for(var n=0;n<s.length;n++){var t=s[n];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}return function(s,n,t){return n&&e(s.prototype,n),t&&e(s,t),s}}(),Modal=function(){function e(s){_classCallCheck(this,e),this.modal=document.querySelector(s),this.overlay=document.querySelector(".overlay")}return _createClass(e,[{key:"show",value:function(){this.modal.classList.add("show"),this.overlay.classList.add("show")}},{key:"hide",value:function(){this.modal.classList.remove("show"),this.overlay.classList.remove("show")}}]),e}();